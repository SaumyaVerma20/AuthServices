package com.AuthService.AuthService.auth;


import com.AuthService.AuthService.service.JwtService;
import com.AuthService.AuthService.service.UserDetailsServiceImpl;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.AllArgsConstructor;
import lombok.Data;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

import java.io.IOException;

@Component
@AllArgsConstructor
@Data
public class JwtAuthFilter extends OncePerRequestFilter {
    @Autowired
    private final JwtService jwtService;
    @Autowired
    private final UserDetailsServiceImpl userDetailsServiceImpl;

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {
       if(request instanceof HttpServletRequest httpRequest)
       {
           if(response instanceof HttpServletResponse httpResponse)
           {
               String alreadyFilteredAttributeName = this.getAlreadyFilteredAttributeName();
               boolean hasAlreadyFiltered = request.getAttribute(alreadyFilteredAttributeName) != null;
               if(!this.skipDispatch(httpRequest) && !this.shouldNotFilter(httpRequest))
               {

               }
           }
       }
    }
}
